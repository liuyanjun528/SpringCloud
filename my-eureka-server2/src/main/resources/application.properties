#通过eureka.client.registerWithEureka：false和fetchRegistry：false来表明自己是一个eureka server.
#在默认设置下，eureka服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为
#eureka.client.registerWithEureka=false
#eureka.client.fetchRegistry=false
server.port=8777
eureka.instance.hostname=com.lyj
#注册中心的名称
spring.application.name=eureka-server2
#指定erreka-server注册中心的地址
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
 # 关闭自我保护模式是否开启自我保护，默认为 true，在开启自我保护的情况下，注册中心在丢失客户端时，会进入自动保护模式，
 #注册中心并不会将该服务从注册中心删除掉。这里我设置为 false，即关闭自我保护。根据我的经验，如果设置为 true，
 #在负载均衡条件下，一个服务挂掉后，注册中心并没有删掉该服务，会导致客户端请求的时候可能会请求到该服务，导致系统无法访问，
 #所以我推荐将这个属性设置为 false。
eureka.server.enable-self-preservation=false